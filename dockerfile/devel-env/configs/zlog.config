# comments
[global]
strict init = true
buffer min = 1024
buffer max = 2MB
rotate lock file = /var/zlog.lock
#default format = "%d.%us %-6V [%p:%F:%L] - %m%n"
# %m: 消息内容
# %n: 换行
default format = "%d.%us %-6V [%p:%U:%L] %m"
file perms = 600

[levels]
TRACE = 10
CRIT = 130, LOG_CRIT

[formats]
# 用来定义日志格式：
# (name) = "(actual formats)"
# 后面的规则（rules）需要引用时，就通过(name)。(name)必须由数字、字母、下划线
# （"_"）组成。(actual format)需要用双引号包裹，可以由转换字符串组成，见【转换格
# 式串】部分。
# zlog可以识别的转换字符有:
# ------------------------------------------------------------------------------
# | 转换字符 |                说明              |            示例              |
# |----------+----------------------------------+------------------------------|
# | %c       | 分类名                           | may_cat                      |
# |----------+----------------------------------+------------------------------|
# | %d()     | 打印日志的时间。后面要跟一对     | %d(%F) 2022-12-01            | 
# |          | 小括号()，内含说明具体的日期     | %d(%m-%d %T) 12-01 17:17:42  |
# |          | 格式。                           | %d(%T) 17:17:42.035          |
# |          | 就像%d(%F)或%d(%m-%d %T)。       | %d 2022-02-14 17:03:12       |
# |----------+----------------------------------+------------------------------|
# | %E()     | 获取环境变量的值                 | %E(USER) martin              |
# |----------+----------------------------------+------------------------------|
# | %ms      | 毫秒，3位数字字符串              | 013                          |
# |          | 取自gettimeofday(2)              |                              |
# |----------+----------------------------------+------------------------------|
# | %us      | 微秒，6位数字字符串              | 002323                       |
# |          | 取自gettimeofday(2)              |                              |
# |----------+----------------------------------+------------------------------|
# | %F       | 源代码文件名，来源于__FILE__宏。 | test_hello.c或某些编译器下， |
# |          | 某些编译器，__FILE__是绝对路径， | /home/zlog/src/test_hello.c  |
# |          | 可用%f去掉目录只保留文件名，     |                              |
# |          | 或编译器有选项可用调节           |                              |
# |----------+----------------------------------+------------------------------|
# | %f       | 源代码文件名，输出%F最后一个'/'  | test_hello.c                 |
# |          | 后面的部分。会有一定性能损失。   |                              |
# |----------+----------------------------------+------------------------------|
# | %H       | 主机名，来源于gethostname(2)     | zlog-dev                     |
# |----------+----------------------------------+------------------------------|
# | %L       | 源代码行号，来源于__LINE__宏     | 125                          |
# |----------+----------------------------------+------------------------------|
# | %m       | 用户日志，用户从zlog接口输入的   | hello, zlog                  |
# |          | 日志（内容）                     |                              |
# |----------+----------------------------------+------------------------------|
# | %M       | MDC(mapped diagnostic context)， | %M(clientNumber) 123456      |
# |          | 每个线程一张键值对表，输出键相对 |                              |
# |          | 应的值。后面必需跟一对小括号()内 |                              |
# |          | 含键。例如，%M(clientNumber)，   |                              |
# |          | clientNumber。可参见【MDC】      |                              |
# |----------+----------------------------------+------------------------------|
# | %n       | 换行符，目前还不支持Windows换行符| \n                           |
# |----------+----------------------------------+------------------------------|
# | %p       | 进程ID，来源于个getpid()         | 2134                         |
# |----------+----------------------------------+------------------------------|
# | %U 	     | 调用函数名，源于__func__(C99)或  | main                         |
# |          | __FUNCTION__(gcc)                |                              |
# |----------+----------------------------------+------------------------------|
# | %V 	     | 日志级别，大写 	                | INFO                         |
# |----------+----------------------------------+------------------------------|
# | %v 	     | 日志级别，小写 	                | info                         |
# |----------+----------------------------------+------------------------------|
# | %t 	     | 16进制表示线程ID，来源于         | 0xba01e70                    |
# |          | phtread_self()                   |                              |
# |          | "0x%x", (unsigned int) pthread_t |                              |
# |----------+----------------------------------+------------------------------|
# | %T 	     | 相当于%t,不过以长整型表示        | 140633234859776              |
# |          | "%lu", (unsinged long)pthread_t 	|                              |
# |----------+----------------------------------+------------------------------|
# | %%       | 一个百分号                       | %                            |
# ------------------------------------------------------------------------------
simple = "%m%n"
normal = "%d %m%n"

[rules]
default.*               >stdout; simple
#*.*                    "%12.2E(HOME)/log/%c.log", 1MB*12; simple
#my_.INFO              >stderr;
#my_cat.!ERROR         "/var/log/aa.log"
#my_dog.=DEBUG         >syslog, LOG_LOCAL0; simple
#my_mice.*             $user_define;
log_to_file.*          "/var/log/zlog.log", 1MB*12;
